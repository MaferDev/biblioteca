//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ObtenerFacturas.WSConsultaComprobantesOnLine {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="consultServiceSoapBinding", Namespace="http://ws.feds/")]
    public partial class consultService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getDocumentoPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentoXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDocumentoCDROperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public consultService() {
            this.SoapVersion = System.Web.Services.Protocols.SoapProtocolVersion.Soap12;
            this.Url = global::ObtenerFacturas.Properties.Settings.Default.ObtenerFacturas_WebReference_consultService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getDocumentoPDFCompletedEventHandler getDocumentoPDFCompleted;
        
        /// <remarks/>
        public event getDocumentoXMLCompletedEventHandler getDocumentoXMLCompleted;
        
        /// <remarks/>
        public event getDocumentoCDRCompletedEventHandler getDocumentoCDRCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.feds/", ResponseNamespace="http://ws.feds/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDocumentoPDF([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ruc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tipo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string serie, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string correlativo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fecha, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string total) {
            object[] results = this.Invoke("getDocumentoPDF", new object[] {
                        ruc,
                        tipo,
                        serie,
                        correlativo,
                        fecha,
                        total});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentoPDFAsync(string ruc, string tipo, string serie, string correlativo, string fecha, string total) {
            this.getDocumentoPDFAsync(ruc, tipo, serie, correlativo, fecha, total, null);
        }
        
        /// <remarks/>
        public void getDocumentoPDFAsync(string ruc, string tipo, string serie, string correlativo, string fecha, string total, object userState) {
            if ((this.getDocumentoPDFOperationCompleted == null)) {
                this.getDocumentoPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentoPDFOperationCompleted);
            }
            this.InvokeAsync("getDocumentoPDF", new object[] {
                        ruc,
                        tipo,
                        serie,
                        correlativo,
                        fecha,
                        total}, this.getDocumentoPDFOperationCompleted, userState);
        }
        
        private void OngetDocumentoPDFOperationCompleted(object arg) {
            if ((this.getDocumentoPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentoPDFCompleted(this, new getDocumentoPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.feds/", ResponseNamespace="http://ws.feds/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDocumentoXML([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ruc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tipo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string serie, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string correlativo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fecha, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string total) {
            object[] results = this.Invoke("getDocumentoXML", new object[] {
                        ruc,
                        tipo,
                        serie,
                        correlativo,
                        fecha,
                        total});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentoXMLAsync(string ruc, string tipo, string serie, string correlativo, string fecha, string total) {
            this.getDocumentoXMLAsync(ruc, tipo, serie, correlativo, fecha, total, null);
        }
        
        /// <remarks/>
        public void getDocumentoXMLAsync(string ruc, string tipo, string serie, string correlativo, string fecha, string total, object userState) {
            if ((this.getDocumentoXMLOperationCompleted == null)) {
                this.getDocumentoXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentoXMLOperationCompleted);
            }
            this.InvokeAsync("getDocumentoXML", new object[] {
                        ruc,
                        tipo,
                        serie,
                        correlativo,
                        fecha,
                        total}, this.getDocumentoXMLOperationCompleted, userState);
        }
        
        private void OngetDocumentoXMLOperationCompleted(object arg) {
            if ((this.getDocumentoXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentoXMLCompleted(this, new getDocumentoXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws.feds/", ResponseNamespace="http://ws.feds/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getDocumentoCDR([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ruc, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string tipo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string serie, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string correlativo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fecha, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string total) {
            object[] results = this.Invoke("getDocumentoCDR", new object[] {
                        ruc,
                        tipo,
                        serie,
                        correlativo,
                        fecha,
                        total});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDocumentoCDRAsync(string ruc, string tipo, string serie, string correlativo, string fecha, string total) {
            this.getDocumentoCDRAsync(ruc, tipo, serie, correlativo, fecha, total, null);
        }
        
        /// <remarks/>
        public void getDocumentoCDRAsync(string ruc, string tipo, string serie, string correlativo, string fecha, string total, object userState) {
            if ((this.getDocumentoCDROperationCompleted == null)) {
                this.getDocumentoCDROperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDocumentoCDROperationCompleted);
            }
            this.InvokeAsync("getDocumentoCDR", new object[] {
                        ruc,
                        tipo,
                        serie,
                        correlativo,
                        fecha,
                        total}, this.getDocumentoCDROperationCompleted, userState);
        }
        
        private void OngetDocumentoCDROperationCompleted(object arg) {
            if ((this.getDocumentoCDRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDocumentoCDRCompleted(this, new getDocumentoCDRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getDocumentoPDFCompletedEventHandler(object sender, getDocumentoPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentoPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentoPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getDocumentoXMLCompletedEventHandler(object sender, getDocumentoXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getDocumentoCDRCompletedEventHandler(object sender, getDocumentoCDRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDocumentoCDRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDocumentoCDRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591